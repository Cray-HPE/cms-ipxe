@Library('csm-shared-library') _

pipeline {
    agent {
        label "metal-gcp-builder"
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: "10"))
        timestamps()
    }

    environment {
        DOCKER_NAME = "cray-bss-ipxe"
        CHART_NAME = "cms-ipxe"
        DESCRIPTION = "Cray Management System iPXE binaries"
        IS_STABLE = getBuildIsStable()
        VERSION = getDockerBuildVersion(isStable: env.IS_STABLE)
        DOCKER_ARGS = getDockerBuildArgs(name: env.DOCKER_NAME, description: env.DESCRIPTION)
        CHART_VERSION = getChartVersion(version: env.VERSION)
    }

    stages {
        stage("Clone cms_meta_tools repo") {
            steps {
                withCredentials([gitUsernamePassword(credentialsId: 'jenkins-algol60-cray-hpe-github-integration')]) {
                    sh "make clone_cms_meta_tools"
                }
            }
        }
        stage("Build Prep") {
            steps {
                sh "make build_prep"
            }
        }

        stage("Lint") {
            steps {
                sh "make lint"
            }
        }

        stage("Build") {
            parallel {
                stage('Image') {
                    steps {
                        sh "make image"
                    }
                }

                stage('Chart') {
                    steps {
                        updateCsmHelmChartAppVersion(chartPath: "${WORKSPACE}/kubernetes/${CHART_NAME}", appVersion:  env.VERSION)
                        sh "make chart"
                    }
                }
            }
        }

        stage('Publish ') {
            steps {
                script {
                    publishCsmDockerImage(image: env.DOCKER_NAME, tag: env.VERSION, isStable: env.IS_STABLE)
                    publishCsmHelmCharts(component: env.CHART_NAME, chartsPath: "${WORKSPACE}/kubernetes/.packaged", isStable: env.IS_STABLE)
                }
            }
        }
    }
}
